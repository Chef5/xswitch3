{"version":3,"file":"background.min.js","mappings":"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","sources":["webpack://xswitch/./src/constants.ts","webpack://xswitch/./src/enums.ts","webpack://xswitch/./src/forward.ts","webpack://xswitch/./src/chrome-storage.ts","webpack://xswitch/./src/declarative-net-request.ts","webpack://xswitch/./src/background.ts"],"sourcesContent":["export const REG = {\n  TRIM_JSON: /(,+)([^a-z0-9[\"])/gi,\n  CHROME_EXTENSION: /^chrome-extension:\\/\\//i,\n  // support [ ] ( ) \\ * ^ $\n  FORWARD: /\\\\|\\[|]|\\(|\\)|\\*|\\$|\\^/i,\n  WHITESPACE: /\\s+/g,\n  X_HEADER: /^x-/,\n};\n\nexport const ALL_URLS = '<all_urls>';\nexport const BLOCKING = 'blocking';\nexport const REQUEST_HEADERS = 'requestHeaders';\nexport const RESPONSE_HEADERS = 'responseHeaders';\nexport const DEFAULT_CREDENTIALS_RESPONSE_HEADERS =\n  'Content-Type, access-control-allow-headers, Authorization, X-Requested-With, X-Referer';\nexport const CORS = {\n  METHODS: 'access-control-allow-methods',\n  CREDENTIALS: 'access-control-allow-credentials',\n  ORIGIN: 'access-control-allow-origin',\n  HEADERS: 'access-control-allow-headers',\n};\nexport const ACCESS_CONTROL_REQUEST_HEADERS = 'access-control-request-headers';\nexport const DEFAULT_CORS_ORIGIN = '*';\nexport const DEFAULT_CORS_METHODS = '*';\nexport const DEFAULT_CORS_CREDENTIALS = 'true';\nexport const ORIGIN = 'origin';\n/**\n * Disabled storage key\n */\nexport const DISABLED = 'disabled';\n/**\n * pure JSON storage key\n */\nexport const JSON_CONFIG = 'config';\n/**\n * JSON with comments storage key\n */\nexport const JSONC_CONFIG = 'config_for_shown';\n\nexport const EDITING_CONFIG_KEY = 'config_editing_key';\nexport const TAB_LIST = 'tab_list';\nexport const ACTIVE_KEYS = 'active_keys';\nexport const CLEAR_CACHE_ENABLED = 'clearCacheEnabled';\nexport const CORS_STORAGE = 'cors';\nexport const CORS_ENABLED_STORAGE_KEY = 'corsEnabled';\nexport const PROXY_STORAGE_KEY = 'proxy';\nexport const MILLISECONDS_PER_WEEK = 1000 * 60 * 60 * 24 * 7;\nexport const RULE = 'rule';\nexport const LANGUAGE_JSON = 'json';\nexport const CHANGE = 'change';\nexport const DOM_CONTENT_LOADED = 'DOMContentLoaded';\nexport const SWITCH_DOM_ID = 'J_Switch';\nexport const SWITCH_INNER_DOM_ID = 'J_SwitchInner';\nexport const SWITCH_AREA_DOM_ID = 'J_SwitchArea';\nexport const NEW_TAB_DOM_ID = 'J_OpenInNewTab';\nexport const OPEN_README_DOM_ID = 'J_OpenReadme';\nexport const CONTAINER_DOM_ID = 'J_Container';\nexport const STATUS_DOM_ID = 'J_Status';\nexport const CLEAR_CACHE_ENABLED_DOM_ID = 'J_ClearCacheEnabled';\nexport const CORS_ENABLED_DOM_ID = 'J_CorsEnabled';\nexport const SWITCH_CHECKED_CLASSNAME = 'ant-switch-checked';\nexport const POPUP_HTML_PATH = 'XSwitch.html';\nexport const PREFIX = process.env.NODE_ENV !== 'production' ? '/build/' : './';\nexport const MONACO_VS_PATH = process.env.NODE_ENV !== 'production'\n  ? '/build/lib/monaco-editor/min/vs'\n  : './lib/monaco-editor/min/vs';\nexport const MONACO_CONTRIBUTION_PATH = 'vs/language/json/monaco.contribution';\nexport const HELP_URL = 'https://yuque.com/jiushen/blog/xswitch-readme';\nexport const DEFAULT_FONT_FAMILY = 'Menlo, Monaco, \"Courier New\", monospace';\nexport const PLATFORM_MAC = 'Mac';\nexport const OPTIONS_SAVED = 'Options saved.';\nexport const EMPTY_STRING = '';\nexport const KEY_DOWN = 'keydown';\nexport const CLICK = 'click';\nexport const ANYTHING = 'anyString';\nexport const FORMAT_DOCUMENT_CMD = 'editor.action.formatDocument';\nexport const KEY_CODE_S = 83;\nexport const SHOW_FOLDING_CONTROLS = 'always';\nexport const OPACITY_VISIBLE = '1';\nexport const NULL_STRING = 'null';\nexport const RULE_COMPLETION = `[\n  \"\\${1:from}\",\n  \"\\${1:to}\",\n],`;\n\nexport const DEFAULT_DATA = `{\n  // Use IntelliSense to learn about possible links.\n  // Type \\`rule\\` to quick insert rule.\n  // 输入 rule 来快速插入规则\n  // For more information, visit: https://github.com/yize/xswitch\n  \"proxy\": [\n    [\n      \"https://unpkg.com/react@16.4.1/umd/react.production.min.js\",\n      \"https://unpkg.com/react@16.4.1/umd/react.development.js\"\n    ],\n    // \\`Command/Ctrl + click\\` to visit:\n    // https://unpkg.com/react@16.4.1/umd/react.production.min.js\n    // [\n      // \"(.*)/path1/path2/(.*)\", // https://www.sample.com/path1/path2/index.js\n      // \"http://127.0.0.1:3000/$2\", // http://127.0.0.1:3000/index.js\n    // ],\n  ],\n  // urls that want CORS\n  // \"cors\": [\n    // \"mocks.a.com\",\n    // \"mocks.b.com\"\n  // ]\n}\n`;\n\nexport const DEFAULT_DUP_DATA = `{\n  \"proxy\": [\n    [\n      \"(.*)/path1/path2/(.*)\", // https://www.sample.com/path1/path2/index.js\n      \"http://127.0.0.1:3000/$2\", // http://127.0.0.1:3000/index.js\n    ],\n  ],\n}\n`;\n\n// false: 使用chrome.storage.sync.get/set\n// true:  使用chrome.storage.local.get/set\nexport const USE_CHROME_STORAGE_SYNC_FN = false;\n\n/**\n * check if old config rules saving by chrome.storage.sync.set function have been migarated\n */\nexport const SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL = 'sync_storage_data_has_been_migarated_to_local';\n\nexport const BLUE_ICON_PATH = 'images/blue_128.png';\nexport const GREY_ICON_PATH = 'images/grey_128.png';\nexport const DARK_MODE_MEDIA = '(prefers-color-scheme: dark)';\n","export enum UrlType {\n  REG = 'reg',\n  STRING = 'string',\n}\n\nexport enum Enabled {\n  YES = 'enabled',\n  NO = 'disabled',\n}\n\nexport enum IconBackgroundColor {\n  ON = '#1890ff',\n  OFF = '#bfbfbf',\n  ERROR = '#f5222d',\n}\n\nexport enum BadgeText {\n  ERROR = 'Error',\n  OFF = 'OFF',\n  ON = 'ON',\n}\n","import {\n  CORS,\n  DEFAULT_CORS_CREDENTIALS,\n  DEFAULT_CORS_METHODS,\n  DEFAULT_CORS_ORIGIN,\n  ORIGIN,\n  REG,\n  EMPTY_STRING,\n  DEFAULT_CREDENTIALS_RESPONSE_HEADERS,\n  NULL_STRING,\n  ACCESS_CONTROL_REQUEST_HEADERS,\n} from \"./constants\";\nimport { Enabled, UrlType } from \"./enums\";\n\ninterface IFowardConfig {\n  proxy?: string[][];\n  cors?: string[];\n}\n\n/**\n * get url type\n * @param url urls\n * @param reg rule\n */\nconst matchUrl = (url: string, reg: string): string | boolean => {\n  if (REG.FORWARD.test(reg)) {\n    // support ??\n    const r = new RegExp(reg.replace(\"??\", \"\\\\?\\\\?\"), \"i\");\n    const matched = r.test(url);\n    if (matched) {\n      return UrlType.REG;\n    }\n  } else {\n    const matched = url.indexOf(reg) > -1;\n    if (matched) {\n      return UrlType.STRING;\n    }\n  }\n  return false;\n};\n\nclass Forward {\n  private _lastRequestId: string | null = null;\n  private _disabled: Enabled = Enabled.YES;\n  private _config: IFowardConfig = {};\n  private _originRequest: Map<string, string> = new Map();\n  private _originRequestHeaders: Map<string, string> = new Map();\n  private _urls: string[] = new Array(200); // for cache\n\n  get urls(): string[] {\n    return this._urls;\n  }\n\n  get disabled(): Enabled {\n    return this._disabled;\n  }\n\n  set disabled(newValue: Enabled) {\n    this._disabled = newValue;\n  }\n  get config(): IFowardConfig {\n    return this._config;\n  }\n  set config(newValue: IFowardConfig) {\n    this._config = { ...newValue };\n  }\n\n  // Breaking the CORS Limitation\n  onHeadersReceivedCallback(\n    details: chrome.webRequest.WebResponseHeadersDetails,\n    cors: boolean = true\n  ): chrome.webRequest.BlockingResponse {\n    // has cors rules\n    const corsMap: string[] = this.config.cors!;\n    let corsMatched: boolean = false;\n\n    if (corsMap && corsMap.length) {\n      corsMap.forEach((rule) => {\n        if (matchUrl(details.url, rule)) {\n          corsMatched = true;\n        }\n      });\n    }\n\n    const disabled: boolean =\n      this.disabled === Enabled.NO || !cors || !corsMatched;\n\n    if (disabled) {\n      return {};\n    }\n\n    const originUrl: string = details.url;\n    let resHeaders: chrome.webRequest.HttpHeader[] = [];\n    let CORSOrigin: string =\n      (this._originRequest.get(details.requestId)\n        ? this._originRequest.get(details.requestId)\n        : details.initiator) || DEFAULT_CORS_ORIGIN;\n\n    if (details.responseHeaders && details.responseHeaders.filter) {\n      let hasCredentials: boolean | string = false;\n      let tempOrigin: string = EMPTY_STRING;\n      resHeaders = details.responseHeaders.filter((responseHeader) => {\n        // Already has access-control-allow-origin headers\n        if (CORS.ORIGIN === responseHeader.name.toLowerCase()) {\n          tempOrigin = responseHeader.value!;\n        }\n\n        if (CORS.CREDENTIALS === responseHeader.name.toLowerCase()) {\n          hasCredentials = responseHeader.value!;\n        }\n\n        if (\n          [CORS.ORIGIN, CORS.CREDENTIALS, CORS.METHODS, CORS.HEADERS].indexOf(\n            responseHeader.name.toLowerCase()\n          ) < 0\n        ) {\n          return true;\n        }\n        return false;\n      });\n\n      // only when hasCredentials\n      if (hasCredentials) {\n        CORSOrigin = tempOrigin;\n      }\n    }\n\n    // suck point\n    if (\n      CORSOrigin === DEFAULT_CORS_ORIGIN &&\n      this._originRequest.get(details.requestId) === NULL_STRING\n    ) {\n      CORSOrigin = DEFAULT_CORS_ORIGIN;\n    }\n\n    resHeaders.push({\n      name: CORS.ORIGIN,\n      value: CORSOrigin,\n    });\n    resHeaders.push({\n      name: CORS.CREDENTIALS,\n      value: DEFAULT_CORS_CREDENTIALS,\n    });\n    resHeaders.push({\n      name: CORS.METHODS,\n      value: DEFAULT_CORS_METHODS,\n    });\n\n    let CORSHeader: string = EMPTY_STRING;\n\n    if (this._originRequestHeaders.get(details.requestId)) {\n      CORSHeader = \",\" + this._originRequestHeaders.get(details.requestId);\n    }\n\n    resHeaders.push({\n      name: CORS.HEADERS,\n      value: DEFAULT_CREDENTIALS_RESPONSE_HEADERS + CORSHeader,\n    });\n\n    return {\n      responseHeaders: resHeaders,\n    };\n  }\n\n  redirectToMatchingRule(\n    details: chrome.webRequest.WebRequestHeadersDetails\n  ): chrome.webRequest.BlockingResponse {\n    const rules = this.config.proxy;\n    let redirectUrl: string = details.url;\n\n    // in case of chrome-extension downtime\n    if (!rules || !rules.length || REG.CHROME_EXTENSION.test(redirectUrl)) {\n      return {};\n    }\n\n    if (\n      /http(s?):\\/\\/.*\\.(js|css|json|jsonp)/.test(redirectUrl) &&\n      this._urls.indexOf(redirectUrl) < 0\n    ) {\n      this._urls.shift();\n      this._urls.push(redirectUrl);\n    }\n\n    try {\n      for (let i: number = 0; i < rules.length; i++) {\n        const rule = rules[i];\n        if (rule && rule[0] && typeof rule[1] === \"string\") {\n          const reg = rule[0];\n          const matched = matchUrl(redirectUrl, reg);\n\n          if (details.requestId !== this._lastRequestId) {\n            if (matched === UrlType.REG) {\n              const r = new RegExp(reg.replace(\"??\", \"\\\\?\\\\?\"), \"i\");\n              redirectUrl = redirectUrl.replace(r, rule[1]);\n            } else if (matched === UrlType.STRING) {\n              redirectUrl = redirectUrl.split(rule[0]).join(rule[1]);\n            }\n          }\n        }\n      }\n    } catch (e) {\n      console.error(\"rule match error\", e);\n    }\n\n    this._lastRequestId = details.requestId;\n    return redirectUrl === details.url ? {} : { redirectUrl };\n  }\n\n  onBeforeSendHeadersCallback(\n    details: chrome.webRequest.WebRequestHeadersDetails\n  ): chrome.webRequest.BlockingResponse {\n    const headers: string[] = [];\n    for (let i: number = 0; i < details.requestHeaders!.length; ++i) {\n      const requestName = details.requestHeaders![i].name.toLowerCase();\n      if (requestName === ORIGIN) {\n        this._originRequest.set(\n          details.requestId,\n          details.requestHeaders![i].value!\n        );\n      } else if (\n        requestName === ACCESS_CONTROL_REQUEST_HEADERS ||\n        REG.X_HEADER.test(requestName)\n      ) {\n        headers.push(requestName);\n      }\n    }\n    if (headers.length) {\n      this._originRequestHeaders.set(details.requestId, headers.join(\",\"));\n    }\n    return { requestHeaders: details.requestHeaders };\n  }\n\n  onBeforeRequestCallback(\n    details: chrome.webRequest.WebRequestHeadersDetails\n  ): chrome.webRequest.BlockingResponse {\n    return this.redirectToMatchingRule(details);\n  }\n}\n\n// 在 Service Worker 环境中创建单例实例\nlet _forwardInstance: Forward | null = null;\n\nfunction getForwardInstance(): Forward {\n  if (!_forwardInstance) {\n    _forwardInstance = new Forward();\n  }\n  return _forwardInstance;\n}\n\nexport default getForwardInstance();\n","import {\n  JSONC_CONFIG,\n  JSON_CONFIG,\n  DISABLED,\n  CLEAR_CACHE_ENABLED,\n  CORS_ENABLED_STORAGE_KEY,\n  TAB_LIST,\n  EDITING_CONFIG_KEY,\n  ACTIVE_KEYS,\n  USE_CHROME_STORAGE_SYNC_FN,\n  SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL,\n} from \"./constants\";\nimport { JSONC2JSON, JSON_Parse } from \"./utils\";\nimport { Enabled } from \"./enums\";\n\ninterface ConfigStorage {\n  [JSONC_CONFIG]: object | string;\n}\ninterface OptionsStorage {\n  [CLEAR_CACHE_ENABLED]: string;\n  [CORS_ENABLED_STORAGE_KEY]: string;\n}\n\ninterface ChromeStorageManagerProps {\n  useChromeStorageSyncFn: boolean;\n}\nexport class ChromeStorageManager {\n  private storageFn: any;\n\n  constructor(props: ChromeStorageManagerProps) {\n    /**\n     **  More details: https://developer.chrome.com/extensions/storage\n     **\n     **  Property limit between storage.sync and storage.local in QUOTA_BYTES:\n     **  QUOTA_BYTES_PER_ITEM prop in storage.sync is 8,192 and\n     **  QUOTA_BYTES prop in storage.sync is 102,400,\n     **  which indicates the maximum total amount (in bytes) of data that can be stored in sync storage.sync.\n     **  Updates that would cause this limit to be exceeded fail immediately and set runtime.lastError.\n     **\n     **  QUOTA_BYTES prop in storage.local is 5,242,880,\n     **  which indicates the maximum amount (in bytes) of data that can be stored in local storage,\n     **  as measured by the JSON stringification of every value plus every key's length.\n     */\n    this.storageFn = props.useChromeStorageSyncFn\n      ? chrome.storage.sync\n      : chrome.storage.local;\n  }\n\n  get(keyOrObj: any, callback?: Function): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.storageFn.get(keyOrObj, (result: any) => {\n        if (chrome.runtime.lastError) {\n          reject(chrome.runtime.lastError);\n        } else {\n          resolve(result);\n          if (callback) callback(result);\n        }\n      });\n    });\n  }\n\n  set(obj: any, callback?: Function): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.storageFn.set(obj, () => {\n        if (chrome.runtime.lastError) {\n          reject(chrome.runtime.lastError);\n        } else {\n          resolve(obj);\n          if (callback) callback(obj);\n        }\n      });\n    });\n  }\n}\n\nconst csmInstance = new ChromeStorageManager({\n  useChromeStorageSyncFn: USE_CHROME_STORAGE_SYNC_FN, // we can also make this option configurable\n});\n\n/**\n * 兼容chrome.storage.sync 历史数据的逻辑\n */\nfunction checkAndSyncHistorialSyncStorageDataToLocal() {\n  const historyStorageKeyOrObj = {\n    [JSONC_CONFIG]: {\n      0: \"\",\n    },\n    [JSON_CONFIG]: {},\n    [TAB_LIST]: [\n      {\n        id: \"0\",\n        name: \"Current\",\n        active: true,\n      },\n    ],\n    [ACTIVE_KEYS]: [\"0\"],\n  };\n  const migaratedFlag = {\n    [SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL]: {\n      migarated: false,\n    },\n  };\n\n  // Code below is only for migaration testing\n  //\n  // csmInstance.set({\n  //   [SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL]: {\n  //     migarated: false,\n  //   },\n  // });\n\n  csmInstance.get(migaratedFlag, (result: any) => {\n    if (!result[SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL].migarated) {\n      chrome.storage.sync.get(historyStorageKeyOrObj, (hisData: any) => {\n        const stash: any = {\n          [JSONC_CONFIG]: {},\n          [JSON_CONFIG]: {},\n        };\n        hisData[TAB_LIST].forEach((tab: any) => {\n          stash[JSONC_CONFIG][tab.id] = hisData[JSONC_CONFIG][tab.id];\n          stash[JSON_CONFIG][tab.id] = hisData[JSON_CONFIG][tab.id];\n        });\n\n        csmInstance.set({\n          [SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL]: {\n            migarated: true,\n          },\n          ...hisData,\n          ...stash,\n        });\n      });\n    } else {\n      console.log(\"SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL\");\n    }\n  });\n}\n\ncheckAndSyncHistorialSyncStorageDataToLocal();\n\nexport function getConfig(editingConfigKey: string): Promise<ConfigStorage> {\n  return new Promise((resolve) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return resolve({\n        [JSONC_CONFIG]: {\n          0: \"\",\n        },\n      });\n    }\n    csmInstance.get(\n      {\n        [JSONC_CONFIG]: {\n          0: \"\",\n        },\n      },\n      (result: any) => {\n        if (typeof result[JSONC_CONFIG] === \"string\") {\n          return resolve({\n            [JSONC_CONFIG]: result[JSONC_CONFIG],\n          });\n        }\n        resolve({\n          [JSONC_CONFIG]: result[JSONC_CONFIG][editingConfigKey],\n        });\n      }\n    );\n  });\n}\n\nexport function getActiveKeys(): Promise<any> {\n  return new Promise((resolve) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return resolve({\n        [ACTIVE_KEYS]: [\"0\"],\n      });\n    }\n    csmInstance.get(\n      {\n        [ACTIVE_KEYS]: [\"0\"],\n      },\n      (result: any) => {\n        resolve(result[ACTIVE_KEYS]);\n      }\n    );\n  });\n}\n\nexport function setActiveKeys(keys?: string[]): Promise<object> | void {\n  if (process.env.NODE_ENV === \"production\") {\n    return new Promise((resolve) => {\n      csmInstance.set(\n        {\n          [ACTIVE_KEYS]: keys,\n        },\n        resolve\n      );\n    });\n  }\n}\n\nexport function getConfigItems(): Promise<any> {\n  return new Promise((resolve) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return resolve({\n        [TAB_LIST]: [\n          {\n            id: \"0\",\n            name: \"Current\",\n            active: true,\n          },\n        ],\n      });\n    }\n    csmInstance.get(\n      {\n        [TAB_LIST]: [\n          {\n            id: \"0\",\n            name: \"Current\",\n            active: true,\n          },\n        ],\n      },\n      (result: any) => {\n        resolve(result[TAB_LIST]);\n      }\n    );\n  });\n}\n\nexport function setConfigItems(items?: any): Promise<object> | void {\n  if (process.env.NODE_ENV === \"production\") {\n    return new Promise((resolve) => {\n      csmInstance.set(\n        {\n          [TAB_LIST]: items.slice(),\n          [ACTIVE_KEYS]: items.map((item: any) => {\n            if (item.active) {\n              return item.id;\n            }\n          }),\n        },\n        resolve\n      );\n    });\n  }\n}\n\nexport function getEditingConfigKey(): Promise<string> {\n  return new Promise((resolve) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return resolve(\"0\");\n    }\n    csmInstance.get(\n      {\n        [EDITING_CONFIG_KEY]: \"0\",\n      },\n      (result: any) => {\n        resolve(result[EDITING_CONFIG_KEY]);\n      }\n    );\n  });\n}\n\nexport function setEditingConfigKey(key: string): Promise<object> | void {\n  if (process.env.NODE_ENV === \"production\") {\n    return new Promise((resolve) => {\n      csmInstance.set(\n        {\n          [EDITING_CONFIG_KEY]: key,\n        },\n        resolve\n      );\n    });\n  }\n}\n\nexport function saveConfig(\n  jsonc: string,\n  editingConfigKey: string\n): Promise<any> | void {\n  const json = JSONC2JSON(jsonc);\n\n  if (process.env.NODE_ENV === \"production\") {\n    return new Promise((resolve) => {\n      csmInstance.get(\n        {\n          [JSONC_CONFIG]: {},\n          [JSON_CONFIG]: {},\n        },\n        (result: any) => {\n          // migrate\n          if (typeof result[JSONC_CONFIG] === \"string\") {\n            result[JSONC_CONFIG] = {};\n            result[JSON_CONFIG] = {};\n          }\n\n          result[JSONC_CONFIG][editingConfigKey] = jsonc;\n\n          JSON_Parse(json, (error, parsedJSON) => {\n            if (!error) {\n              result[JSON_CONFIG][editingConfigKey] = parsedJSON;\n              return;\n            }\n            result[JSON_CONFIG][editingConfigKey] = \"\";\n          });\n\n          csmInstance.set(result, resolve);\n        }\n      );\n    });\n  }\n}\n\nexport function getChecked(): Promise<string> {\n  return new Promise((resolve) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return resolve(Enabled.YES);\n    }\n    csmInstance.get(DISABLED, (result: any) => {\n      resolve(result[DISABLED]);\n    });\n  });\n}\n\nexport function setChecked(checked?: boolean): Promise<object> | void {\n  if (process.env.NODE_ENV === \"production\") {\n    return new Promise((resolve) => {\n      csmInstance.set(\n        {\n          [DISABLED]: checked ? Enabled.YES : Enabled.NO,\n        },\n        resolve\n      );\n    });\n  }\n}\n\nexport function getOptions(): Promise<OptionsStorage> {\n  return new Promise((resolve) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return resolve({\n        [CLEAR_CACHE_ENABLED]: Enabled.YES,\n        [CORS_ENABLED_STORAGE_KEY]: Enabled.YES,\n      });\n    }\n    csmInstance.get(\n      {\n        [CLEAR_CACHE_ENABLED]: Enabled.YES,\n        [CORS_ENABLED_STORAGE_KEY]: Enabled.YES,\n      },\n      (result: any) => {\n        resolve({\n          [CLEAR_CACHE_ENABLED]: result.clearCacheEnabled,\n          [CORS_ENABLED_STORAGE_KEY]: result.corsEnabled,\n        });\n      }\n    );\n  });\n}\n\nexport function setOptions(options: any): Promise<OptionsStorage> | void {\n  if (process.env.NODE_ENV === \"production\") {\n    return new Promise((resolve) => {\n      csmInstance.set(\n        {\n          clearCacheEnabled: options.clearCacheEnabled\n            ? Enabled.YES\n            : Enabled.NO,\n          corsEnabled: options.corsEnabled ? Enabled.YES : Enabled.NO,\n        },\n        resolve\n      );\n    });\n  }\n}\n\nexport function openLink(url: string, isInner: boolean = false): void {\n  chrome.tabs.create(\n    { url: isInner ? chrome.runtime.getURL(url) : url },\n    (tab) => {\n      // Tab opened.\n    }\n  );\n}\n\nexport function removeUnusedItems() {\n  csmInstance.get(\n    {\n      [JSONC_CONFIG]: {},\n      [JSON_CONFIG]: {},\n      [TAB_LIST]: [\n        {\n          id: \"0\",\n          name: \"Current\",\n          active: true,\n        },\n      ],\n    },\n    (result: any) => {\n      let stash: any = {\n        [JSONC_CONFIG]: {},\n        [JSON_CONFIG]: {},\n      };\n      result[TAB_LIST].forEach((tab: any) => {\n        stash[JSONC_CONFIG][tab.id] = result[JSONC_CONFIG][tab.id];\n        stash[JSON_CONFIG][tab.id] = result[JSON_CONFIG][tab.id];\n      });\n      csmInstance.set(stash, () => {});\n    }\n  );\n}\n","import { ALL_URLS, PROXY_STORAGE_KEY, CORS_STORAGE } from \"./constants\";\nimport { Enabled, UrlType } from \"./enums\";\n\ninterface IForwardConfig {\n  proxy?: string[][];\n  cors?: string[];\n}\n\n/**\n * 将代理规则转换为 declarativeNetRequest 规则\n */\nexport function generateProxyRules(\n  config: IForwardConfig\n): chrome.declarativeNetRequest.Rule[] {\n  const rules: chrome.declarativeNetRequest.Rule[] = [];\n  let ruleId = 1;\n\n  if (config.proxy && config.proxy.length > 0) {\n    config.proxy.forEach((rule, index) => {\n      if (rule && rule[0] && rule[1]) {\n        const fromPattern = rule[0];\n        const toUrl = rule[1];\n\n        // 转换正则表达式为 RE2 兼容格式\n        const regexFilter = convertToRe2Pattern(fromPattern);\n        const regexSubstitution = convertToRe2Substitution(toUrl);\n\n        // 创建重定向规则\n        rules.push({\n          id: ruleId++,\n          priority: 1,\n          action: {\n            type: \"redirect\",\n            redirect: {\n              regexSubstitution: regexSubstitution,\n            },\n          },\n          condition: {\n            regexFilter: regexFilter,\n            resourceTypes: [\n              \"main_frame\",\n              \"sub_frame\",\n              \"stylesheet\",\n              \"script\",\n              \"image\",\n              \"font\",\n              \"object\",\n              \"xmlhttprequest\",\n              \"ping\",\n              \"csp_report\",\n              \"media\",\n              \"websocket\",\n              \"other\",\n            ],\n          },\n        });\n      }\n    });\n  }\n\n  return rules;\n}\n\n/**\n * 将原始模式转换为 RE2 兼容的正则表达式\n */\nfunction convertToRe2Pattern(pattern: string): string {\n  let result = pattern;\n\n  // 转义特殊字符\n  result = result\n    .replace(/\\./g, \"\\\\.\") // 转义点号\n    .replace(/-/g, \"\\\\-\");\n  // .replace(/\\(/g, \"\\\\(\") // 转义左括号\n  // .replace(/\\)/g, \"\\\\)\") // 转义右括号\n  // .replace(/\\[/g, \"\\\\[\") // 转义左方括号\n  // .replace(/\\]/g, \"\\\\]\") // 转义右方括号\n  // .replace(/\\?/g, \"\\\\?\") // 转义问号\n  // .replace(/\\*/g, \"\\\\*\") // 转义星号\n  // .replace(/\\+/g, \"\\\\+\") // 转义加号\n  // .replace(/\\|/g, \"\\\\|\") // 转义竖线\n  // .replace(/\\^/g, \"\\\\^\") // 转义脱字符\n  // .replace(/\\$/g, \"\\\\$\") // 转义美元符\n  // .replace(/\\//g, \"\\\\/\") // 转义斜杠\n  // .replace(/\\\\/g, \"\\\\\\\\\"); // 转义反斜杠\n\n  // 恢复捕获组 (.*)\n  result = result.replace(/\\(\\\\\\.\\*\\)/g, \"(.*)\");\n\n  return result;\n}\n\n/**\n * 将目标 URL 转换为 RE2 兼容的替换模式\n */\nfunction convertToRe2Substitution(targetUrl: string): string {\n  // RE2 使用 $1, $2 等作为捕获组引用\n  // return targetUrl\n  //   .replace(/\\$(\\d+)/g, \"$$$1\") // 将 $1, $2 转换为 $$1, $$2\n  //   .replace(/\\\\/g, \"\\\\\\\\\"); // 转义反斜杠\n  return targetUrl.replace(/\\$(\\d+)/g, \"\\\\$1\"); // 将 $1, $2 转换为 $$1, $$2\n}\n\n/**\n * 将 CORS 规则转换为 declarativeNetRequest 规则\n */\nexport function generateCorsRules(\n  config: IForwardConfig\n): chrome.declarativeNetRequest.Rule[] {\n  const rules: chrome.declarativeNetRequest.Rule[] = [];\n  let ruleId = 1000; // 使用不同的 ID 范围\n\n  if (config.cors && config.cors.length > 0) {\n    config.cors.forEach((domain) => {\n      // 添加 CORS 响应头规则\n      rules.push({\n        id: ruleId++,\n        priority: 1,\n        action: {\n          type: \"modifyHeaders\",\n          responseHeaders: [\n            {\n              header: \"access-control-allow-origin\",\n              operation: \"set\",\n              value: \"*\",\n            },\n            {\n              header: \"access-control-allow-credentials\",\n              operation: \"set\",\n              value: \"true\",\n            },\n            {\n              header: \"access-control-allow-methods\",\n              operation: \"set\",\n              value: \"*\",\n            },\n            {\n              header: \"access-control-allow-headers\",\n              operation: \"set\",\n              value:\n                \"Content-Type, access-control-allow-headers, Authorization, X-Requested-With, X-Referer\",\n            },\n          ],\n        },\n        condition: {\n          urlFilter: `||${domain}`,\n          resourceTypes: [\"xmlhttprequest\", \"websocket\"],\n        },\n      });\n    });\n  }\n\n  return rules;\n}\n\n/**\n * 更新 declarativeNetRequest 规则\n */\nexport async function updateDeclarativeNetRequestRules(\n  config: IForwardConfig\n): Promise<void> {\n  try {\n    // 清除现有规则\n    await chrome.declarativeNetRequest.updateDynamicRules({\n      removeRuleIds: await getAllRuleIds(),\n    });\n\n    // 生成新规则\n    const proxyRules = generateProxyRules(config);\n    const corsRules = generateCorsRules(config);\n    const allRules = [...proxyRules, ...corsRules];\n    console.log(\"allRules---\", allRules);\n    // 添加新规则\n    if (allRules.length > 0) {\n      await chrome.declarativeNetRequest.updateDynamicRules({\n        addRules: allRules,\n      });\n    }\n\n    console.log(\n      `Updated declarativeNetRequest rules: ${allRules.length} rules`\n    );\n  } catch (error) {\n    console.error(\"Failed to update declarativeNetRequest rules:\", error);\n  }\n}\n\n/**\n * 获取所有动态规则 ID\n */\nasync function getAllRuleIds(): Promise<number[]> {\n  try {\n    const rules = await (chrome as any).declarativeNetRequest.getDynamicRules();\n    return rules.map((rule: any) => rule.id);\n  } catch (error) {\n    console.error(\"Failed to get dynamic rules:\", error);\n    return [];\n  }\n}\n\n/**\n * 检查 declarativeNetRequest 是否可用\n */\nexport function isDeclarativeNetRequestAvailable(): boolean {\n  return (\n    typeof chrome !== \"undefined\" &&\n    typeof chrome.declarativeNetRequest !== \"undefined\"\n  );\n}\n","import {\n  ALL_URLS,\n  BLOCKING,\n  EMPTY_STRING,\n  MILLISECONDS_PER_WEEK,\n  REQUEST_HEADERS,\n  RESPONSE_HEADERS,\n  JSON_CONFIG,\n  DISABLED,\n  CLEAR_CACHE_ENABLED,\n  CORS_ENABLED_STORAGE_KEY,\n  PROXY_STORAGE_KEY,\n  CORS_STORAGE,\n  ACTIVE_KEYS,\n  USE_CHROME_STORAGE_SYNC_FN,\n  GREY_ICON_PATH,\n  BLUE_ICON_PATH,\n  DARK_MODE_MEDIA,\n} from \"./constants\";\nimport { BadgeText, Enabled, IconBackgroundColor } from \"./enums\";\nimport forward from \"./forward\";\nimport { ChromeStorageManager } from \"./chrome-storage\";\nimport {\n  updateDeclarativeNetRequestRules,\n  isDeclarativeNetRequestAvailable,\n} from \"./declarative-net-request\";\n\nconst csmInstance = new ChromeStorageManager({\n  useChromeStorageSyncFn: USE_CHROME_STORAGE_SYNC_FN,\n});\n\nlet clearRunning: boolean = false;\nlet clearCacheEnabled: boolean = true;\nlet corsEnabled: boolean = true;\nlet parseError: boolean = false;\nlet jsonActiveKeys = [\"0\"];\nlet conf: StorageJSON = {\n  0: {\n    [PROXY_STORAGE_KEY]: [],\n    [CORS_STORAGE]: [],\n  },\n};\n\ninterface SingleConfig {\n  [PROXY_STORAGE_KEY]: Array<[]>;\n  [CORS_STORAGE]: string[];\n}\n\ninterface StorageJSON {\n  0: SingleConfig;\n  [key: string]: any;\n}\n\ncsmInstance.get(\n  {\n    [JSON_CONFIG]: {\n      0: {\n        [PROXY_STORAGE_KEY]: [],\n        [CORS_STORAGE]: [],\n      },\n    },\n    [ACTIVE_KEYS]: [\"0\"],\n  },\n  (result: any) => {\n    jsonActiveKeys = result[ACTIVE_KEYS];\n    if (result && result[JSON_CONFIG]) {\n      conf = result[JSON_CONFIG];\n      const config = getActiveConfig(conf);\n      forward[JSON_CONFIG] = { ...config };\n    } else {\n      forward[JSON_CONFIG] = {\n        [PROXY_STORAGE_KEY]: [],\n        [CORS_STORAGE]: [],\n      };\n      parseError = false;\n    }\n  }\n);\n\nfunction getActiveConfig(config: StorageJSON): object {\n  const activeKeys = [...jsonActiveKeys];\n  const json = config[\"0\"];\n  activeKeys.forEach((key: string) => {\n    if (config[key] && key !== \"0\") {\n      if (config[key][PROXY_STORAGE_KEY]) {\n        if (!json[PROXY_STORAGE_KEY]) {\n          json[PROXY_STORAGE_KEY] = [];\n        }\n        json[PROXY_STORAGE_KEY] = [\n          ...json[PROXY_STORAGE_KEY],\n          ...config[key][PROXY_STORAGE_KEY],\n        ];\n      }\n\n      if (config[key][CORS_STORAGE]) {\n        if (!json[CORS_STORAGE]) {\n          json[CORS_STORAGE] = [];\n        }\n        json[CORS_STORAGE] = [\n          ...json[CORS_STORAGE],\n          ...config[key][CORS_STORAGE],\n        ];\n      }\n    }\n  });\n  return json;\n}\n\ncsmInstance.get(\n  {\n    [DISABLED]: Enabled.YES,\n    [CLEAR_CACHE_ENABLED]: Enabled.YES,\n    [CORS_ENABLED_STORAGE_KEY]: Enabled.YES,\n  },\n  (result: any) => {\n    forward[DISABLED] = result[DISABLED];\n    clearCacheEnabled = result[CLEAR_CACHE_ENABLED] === Enabled.YES;\n    corsEnabled = result[CORS_ENABLED_STORAGE_KEY] === Enabled.YES;\n    setIcon();\n  }\n);\n\nchrome.storage.onChanged.addListener((changes) => {\n  if (changes[ACTIVE_KEYS]) {\n    jsonActiveKeys = changes[ACTIVE_KEYS].newValue;\n  }\n\n  if (changes[JSON_CONFIG]) {\n    const config = getActiveConfig(changes[JSON_CONFIG].newValue);\n    forward[JSON_CONFIG] = { ...config };\n  }\n\n  if (changes[DISABLED]) {\n    forward[DISABLED] = changes[DISABLED].newValue;\n  }\n\n  if (changes[CLEAR_CACHE_ENABLED]) {\n    clearCacheEnabled = changes[CLEAR_CACHE_ENABLED].newValue === Enabled.YES;\n  }\n\n  if (changes[CORS_ENABLED_STORAGE_KEY]) {\n    corsEnabled = changes[CORS_ENABLED_STORAGE_KEY].newValue === Enabled.YES;\n  }\n\n  csmInstance.get(\n    {\n      [JSON_CONFIG]: {\n        0: {\n          [PROXY_STORAGE_KEY]: [],\n          [CORS_STORAGE]: [],\n        },\n      },\n    },\n    (result: any) => {\n      if (result && result[JSON_CONFIG]) {\n        conf = result[JSON_CONFIG];\n        const config = getActiveConfig(conf);\n        forward[JSON_CONFIG] = { ...config };\n        // 更新 declarativeNetRequest 规则\n        if (isDeclarativeNetRequestAvailable()) {\n          updateDeclarativeNetRequestRules(config);\n        }\n      }\n      setIcon();\n    }\n  );\n\n  checkAndChangeIcons();\n});\n\n// 使用 declarativeNetRequest 替代 webRequest API\nif (isDeclarativeNetRequestAvailable()) {\n  // 初始化 declarativeNetRequest 规则\n  const config = getActiveConfig(conf);\n  updateDeclarativeNetRequestRules(config);\n\n  console.log(\"Using declarativeNetRequest API\");\n} else {\n  // 降级到 webRequest API（仅用于兼容性）\n  console.warn(\n    \"declarativeNetRequest not available, falling back to webRequest\"\n  );\n\n  (chrome as any).webRequest?.onBeforeRequest?.addListener(\n    (details: any) => {\n      if (forward[DISABLED] !== Enabled.NO) {\n        if (clearCacheEnabled) {\n          clearCache();\n        }\n        return forward.onBeforeRequestCallback(details);\n      }\n      return {};\n    },\n    { urls: [ALL_URLS] },\n    [BLOCKING]\n  );\n\n  (chrome as any).webRequest?.onHeadersReceived?.addListener(\n    headersReceivedListener,\n    { urls: [ALL_URLS] },\n    [BLOCKING, RESPONSE_HEADERS]\n  );\n\n  (chrome as any).webRequest?.onBeforeSendHeaders?.addListener(\n    (details: any) => forward.onBeforeSendHeadersCallback(details),\n    { urls: [ALL_URLS] },\n    [BLOCKING, REQUEST_HEADERS]\n  );\n}\n\nfunction setBadgeAndBackgroundColor(\n  text: string | number,\n  color: string\n): void {\n  // 兼容 Manifest V3: browserAction -> action\n  const action = (chrome as any).action || (chrome as any).browserAction;\n  action.setBadgeText({\n    text: EMPTY_STRING + text,\n  });\n  action.setBadgeBackgroundColor({\n    color,\n  });\n}\n\nfunction setIcon(): void {\n  if (parseError) {\n    setBadgeAndBackgroundColor(BadgeText.ERROR, IconBackgroundColor.ERROR);\n    return;\n  }\n\n  if (forward[DISABLED] !== Enabled.NO) {\n    setBadgeAndBackgroundColor(\n      forward[JSON_CONFIG]?.[PROXY_STORAGE_KEY]?.length || 0,\n      IconBackgroundColor.ON\n    );\n  } else {\n    setBadgeAndBackgroundColor(BadgeText.OFF, IconBackgroundColor.OFF);\n    return;\n  }\n}\n\nfunction headersReceivedListener(\n  details: chrome.webRequest.WebResponseHeadersDetails\n): chrome.webRequest.BlockingResponse {\n  return forward.onHeadersReceivedCallback(details, corsEnabled);\n}\n\nfunction clearCache(): void {\n  if (!clearRunning) {\n    clearRunning = true;\n    const millisecondsPerWeek = MILLISECONDS_PER_WEEK;\n    const oneWeekAgo = new Date().getTime() - millisecondsPerWeek;\n    chrome.browsingData\n      .removeCache({\n        since: oneWeekAgo,\n      })\n      .then(() => {\n        clearRunning = false;\n      });\n  }\n}\n\nfunction checkAndChangeIcons() {\n  // 兼容 Manifest V3: browserAction -> action\n  const action = (chrome as any).action || (chrome as any).browserAction;\n\n  // Service Worker 环境中没有 window.matchMedia，暂时使用默认图标\n  try {\n    if (typeof window !== \"undefined\" && window.matchMedia) {\n      const isDarkMode = window.matchMedia(DARK_MODE_MEDIA);\n      if (isDarkMode && isDarkMode.matches) {\n        action.setIcon({ path: BLUE_ICON_PATH });\n      } else {\n        action.setIcon({ path: GREY_ICON_PATH });\n      }\n    } else {\n      // Service Worker 环境，使用默认图标\n      action.setIcon({ path: GREY_ICON_PATH });\n    }\n  } catch (error) {\n    // 出错时使用默认图标\n    action.setIcon({ path: GREY_ICON_PATH });\n  }\n}\n\n// check when extension is loaded\ncheckAndChangeIcons();\n"],"names":["TRIM_JSON","CHROME_EXTENSION","FORWARD","WHITESPACE","X_HEADER","ALL_URLS","BLOCKING","CORS","METHODS","CREDENTIALS","ORIGIN","HEADERS","CORS_STORAGE","PROXY_STORAGE_KEY","USE_CHROME_STORAGE_SYNC_FN","SYNC_STORAGE_DATA_HAS_BEEN_MIGARATED_TO_LOCAL","GREY_ICON_PATH","UrlType","IconBackgroundColor","BadgeText","Enabled","matchUrl","url","reg","test","RegExp","replace","REG","indexOf","STRING","_forwardInstance","_lastRequestId","_disabled","YES","_config","_originRequest","Map","_originRequestHeaders","_urls","Array","urls","this","disabled","newValue","config","onHeadersReceivedCallback","details","cors","corsMap","corsMatched","length","forEach","rule","NO","resHeaders","CORSOrigin","get","requestId","initiator","responseHeaders","filter","hasCredentials","tempOrigin","responseHeader","name","toLowerCase","value","push","CORSHeader","redirectToMatchingRule","rules","proxy","redirectUrl","shift","i","matched","r","split","join","e","console","error","onBeforeSendHeadersCallback","headers","requestHeaders","requestName","set","onBeforeRequestCallback","ChromeStorageManager","constructor","props","storageFn","useChromeStorageSyncFn","chrome","storage","sync","local","keyOrObj","callback","Promise","resolve","reject","result","runtime","lastError","obj","csmInstance","async","updateDeclarativeNetRequestRules","declarativeNetRequest","updateDynamicRules","removeRuleIds","getAllRuleIds","proxyRules","ruleId","index","fromPattern","toUrl","regexFilter","pattern","convertToRe2Pattern","regexSubstitution","id","priority","action","type","redirect","condition","resourceTypes","generateProxyRules","corsRules","domain","header","operation","urlFilter","generateCorsRules","allRules","log","addRules","getDynamicRules","map","isDeclarativeNetRequestAvailable","historyStorageKeyOrObj","active","migaratedFlag","migarated","hisData","stash","tab","checkAndSyncHistorialSyncStorageDataToLocal","clearRunning","clearCacheEnabled","corsEnabled","parseError","jsonActiveKeys","conf","getActiveConfig","activeKeys","json","key","setBadgeAndBackgroundColor","text","color","browserAction","setBadgeText","setBadgeBackgroundColor","setIcon","ERROR","forward","ON","OFF","checkAndChangeIcons","window","matchMedia","isDarkMode","matches","path","onChanged","addListener","changes","warn","webRequest","onBeforeRequest","millisecondsPerWeek","oneWeekAgo","Date","getTime","browsingData","removeCache","since","then","clearCache","onHeadersReceived","onBeforeSendHeaders"],"sourceRoot":""}